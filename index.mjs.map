{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/stdevyc.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { ndarray as varianceyc } from '@stdlib/stats-strided-varianceyc';\nimport sqrt from '@stdlib/math-base-special-sqrt';\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array using a one-pass algorithm proposed by Youngs and Cramer.\n*\n* ## References\n*\n* -   Youngs, Edward A., and Elliot M. Cramer. 1971. \"Some Results Relevant to Choice of Sum and Sum-of-Product Algorithms.\" _Technometrics_ 13 (3): 657–65. doi:[10.1080/00401706.1971.10488826](https://doi.org/10.1080/00401706.1971.10488826).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var v = stdevyc( 4, 1, x, 2, 1 );\n* // returns 2.5\n*/\nfunction stdevyc( N, correction, x, strideX, offsetX ) {\n\treturn sqrt( varianceyc( N, correction, x, strideX, offsetX ) );\n}\n\n\n// EXPORTS //\n\nexport default stdevyc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the standard deviation of a strided array using a one-pass algorithm proposed by Youngs and Cramer.\n*\n* ## References\n*\n* -   Youngs, Edward A., and Elliot M. Cramer. 1971. \"Some Results Relevant to Choice of Sum and Sum-of-Product Algorithms.\" _Technometrics_ 13 (3): 657–65. doi:[10.1080/00401706.1971.10488826](https://doi.org/10.1080/00401706.1971.10488826).\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} standard deviation\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var v = stdevyc( x.length, 1, x, 1 );\n* // returns ~2.0817\n*/\nfunction stdevyc( N, correction, x, strideX ) {\n\treturn ndarray( N, correction, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default stdevyc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport stdevyc from './stdevyc.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( stdevyc, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default stdevyc;\n"],"names":["stdevyc","N","correction","x","strideX","offsetX","sqrt","varianceyc","ndarray","stride2offset","setReadOnly"],"mappings":";;gZAgDA,SAASA,EAASC,EAAGC,EAAYC,EAAGC,EAASC,GAC5C,OAAOC,EAAMC,EAAYN,EAAGC,EAAYC,EAAGC,EAASC,GACrD,CCHA,SAASL,EAASC,EAAGC,EAAYC,EAAGC,GACnC,OAAOI,EAASP,EAAGC,EAAYC,EAAGC,EAASK,EAAeR,EAAGG,GAC9D,CCpBAM,EAAAV,EAAA,UAAAQ"}